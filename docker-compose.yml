version: '2'

services:
    nginx: 
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./docker/nginx/development:/etc/nginx/conf.d
            - ./docker/nginx/html:/var/www/html
            - static_volume:/app/backend/movie/static/
            - /media/downloads:/media/downloads
            - certs:/etc/letsencrypt
        depends_on: 
            - backend

    backend:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: /app/docker/backend/wsgi-entrypoint.sh
        env_file:
            - ./backend/.env.production
        volumes:
            - static_volume:/app/backend/movie/static/
            - /media/downloads:/media/downloads
        expose:
            - 8000        
        depends_on:
            - db

    db:
        image: postgres:15
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./docker/postgres:/docker-entrypoint-initdb.d
        env_file:
            - ./backend/.env.production

    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - certs:/etc/letsencrypt
            - ./docker/nginx/html:/var/www/html
        entrypoint: /bin/sh -c
        command: "trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --webroot -w /var/www/html; done"

volumes:
    static_volume: {}
    postgres_data: {}
    certs: {}
